/* 
 * Animations CSS File for Shaun Raj's Portfolio
 * Performance-optimized animations with mobile considerations
 */

/* Keyframe Animations - Core set */

/* Float animation - simplified for better performance */
@keyframes float {
    0% {
        transform: translateY(0) translateX(0);
    }
    50% {
        transform: translateY(40px) translateX(-40px);
    }
    100% {
        transform: translateY(20px) translateX(-60px);
    }
}

/* Fade in up animation */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Pulse animation - used sparingly */
@keyframes pulse {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(1.05);
        opacity: 0.8;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

/* Background gradient shift - more efficient version */
@keyframes gradientShift {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

/* Typing cursor animation */
@keyframes blink {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0;
    }
}

/* Floating animation for skill cards - subtle version */
@keyframes floatCard {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-8px);
    }
}

/* Intersection Observer Animations */
/* These use modern IntersectionObserver API instead of scroll events */

.fade-in {
    opacity: 0;
    transition: opacity 0.8s ease-out;
}

.fade-in.visible {
    opacity: 1;
}

.fade-up {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

.fade-up.visible {
    opacity: 1;
    transform: translateY(0);
}

.fade-right {
    opacity: 0;
    transform: translateX(-30px);
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

.fade-right.visible {
    opacity: 1;
    transform: translateX(0);
}

.fade-left {
    opacity: 0;
    transform: translateX(30px);
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

.fade-left.visible {
    opacity: 1;
    transform: translateX(0);
}

.zoom-in {
    opacity: 0;
    transform: scale(0.9);
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

.zoom-in.visible {
    opacity: 1;
    transform: scale(1);
}

/* Staggered animation delays */
.delay-1 {
    transition-delay: 0.1s;
}

.delay-2 {
    transition-delay: 0.2s;
}

.delay-3 {
    transition-delay: 0.3s;
}

.delay-4 {
    transition-delay: 0.4s;
}

.delay-5 {
    transition-delay: 0.5s;
}

/* Animation Classes - Apply these directly to elements */

/* Moving Sun animation - only on desktop */
@media (min-width: 768px) {
    .moving-sun {
        animation: float 40s infinite alternate ease-in-out;
    }
}

/* Subtle floating elements */
.animate-float {
    animation: floatCard 5s infinite ease-in-out;
}

/* Subtle pulse effect */
.animate-pulse {
    animation: pulse 3s infinite ease-in-out;
}

/* Gradient text effect */
.gradient-text {
    background: linear-gradient(90deg, var(--primary-light), var(--accent));
    background-size: 200% auto;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    animation: gradientShift 5s ease infinite;
}

/* Button hover effects */
.btn-glow:hover {
    box-shadow: 0 0 15px var(--primary);
}

/* 3D card effect - optimized version */
.card-3d {
    transition: transform 0.3s ease;
    transform-style: preserve-3d;
}

.card-3d:hover {
    transform: perspective(1000px) rotateX(3deg) rotateY(3deg);
}

/* Image reveal effect */
.image-reveal {
    position: relative;
    overflow: hidden;
}

.image-reveal img {
    transform: scale(1.05);
    opacity: 0;
    transition: transform 0.8s ease, opacity 0.8s ease;
}

.image-reveal.visible img {
    transform: scale(1);
    opacity: 1;
}

/* Text reveal animation */
.reveal-text {
    position: relative;
    overflow: hidden;
}

/* Staggered animation for lists */
.stagger-list li {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.5s ease, transform 0.5s ease;
}

.stagger-list.visible li:nth-child(1) { transition-delay: 0.1s; }
.stagger-list.visible li:nth-child(2) { transition-delay: 0.2s; }
.stagger-list.visible li:nth-child(3) { transition-delay: 0.3s; }
.stagger-list.visible li:nth-child(4) { transition-delay: 0.4s; }
.stagger-list.visible li:nth-child(5) { transition-delay: 0.5s; }

.stagger-list.visible li {
    opacity: 1;
    transform: translateY(0);
}

/* Performance optimizations for lower-end devices */
@media (max-width: 768px), (prefers-reduced-motion: reduce) {
    /* Disable most animations on mobile/reduced motion */
    .moving-sun,
    .animate-float,
    .animate-pulse {
        animation: none !important;
    }
    
    /* Simplify transitions for better performance */
    .fade-up,
    .fade-right,
    .fade-left,
    .zoom-in {
        transition-duration: 0.5s;
    }
    
    /* Reduce or eliminate transition delays */
    .delay-1, .delay-2, .delay-3, .delay-4, .delay-5 {
        transition-delay: 0.1s;
    }
    
    /* Simplify hover effects */
    .card-3d:hover {
        transform: translateY(-5px);
    }
}

/* IntersectionObserver Animation Script */
/* This script is embedded here for reference, but should be implemented in JS */
/*
document.addEventListener('DOMContentLoaded', function() {
    // Get all elements that need to be animated
    const animatedElements = document.querySelectorAll('.fade-in, .fade-up, .fade-left, .fade-right, .zoom-in, .image-reveal, .stagger-list');
    
    // Create IntersectionObserver instance
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible');
                
                // Optional: Unobserve after animation is triggered
                // observer.unobserve(entry.target);
            }
        });
    }, {
        threshold: 0.1, // When 10% of the element is visible
        rootMargin: '0px 0px -50px 0px' // Trigger a bit before the element is in view
    });
    
    // Observe all elements
    animatedElements.forEach(element => {
        observer.observe(element);
    });
});
*/

/* NEXBOT Animation loading state */
.nexbot-placeholder {
    position: relative;
    width: 100%;
    height: 100%;
    background: rgba(30, 41, 59, 0.3);
    border-radius: var(--border-radius-md);
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
}

.nexbot-placeholder::after {
    content: '';
    position: absolute;
    width: 30%;
    height: 30%;
    border-radius: 50%;
    background: linear-gradient(45deg, var(--primary), var(--accent));
    opacity: 0.6;
    filter: blur(20px);
    animation: pulse 2s infinite ease-in-out;
}

/* Scroll progress indicator animation */
.scroll-progress {
    transform-origin: left;
    will-change: width;
}

/* Star twinkling effect - subtle and low-impact */
@keyframes twinkle {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 1; }
}

.twinkling-star {
    position: absolute;
    width: 2px;
    height: 2px;
    background-color: white;
    border-radius: 50%;
}

.twinkling-star:nth-child(odd) {
    animation: twinkle 3s infinite ease-in-out;
}

.twinkling-star:nth-child(even) {
    animation: twinkle 5s infinite ease-in-out;
}

/* Make sure animations start when the page is loaded */
body.loaded .hero h1,
body.loaded .hero h2,
body.loaded .hero p,
body.loaded .hero .cta-btn {
    animation-play-state: running;
}

/* Preload state - hold animations until everything is ready */
body.preload .hero h1,
body.preload .hero h2,
body.preload .hero p,
body.preload .hero .cta-btn {
    animation-play-state: paused;
}